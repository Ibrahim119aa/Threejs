/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ComputerAnimate.gltf --typescript -o ComputerAnimate.tsx 
Author: DAVID.3D.ART (https://sketchfab.com/david3dart)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/arm-interior-192-from-portal-2-original-7a60dcf3b6e247349a18a42899c06a3e
Title: Arm Interior 192 - From Portal 2 (Original)
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_10: THREE.SkinnedMesh
    Object_11: THREE.SkinnedMesh
    Object_12: THREE.SkinnedMesh
    _rootJoint: THREE.Bone
  }
  materials: {
    arm_interior_192_bose: THREE.MeshStandardMaterial
    arm_motionplatform: THREE.MeshStandardMaterial
    arm_glasstop: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { scene } = useGLTF('/Model/Computer_Animate/ComputerAnimate.gltf')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes._rootJoint} />
          <skinnedMesh geometry={nodes.Object_10.geometry} material={materials.arm_interior_192_bose} skeleton={nodes.Object_10.skeleton} />
          <skinnedMesh geometry={nodes.Object_11.geometry} material={materials.arm_motionplatform} skeleton={nodes.Object_11.skeleton} />
          <skinnedMesh geometry={nodes.Object_12.geometry} material={materials.arm_glasstop} skeleton={nodes.Object_12.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/Model/Computer_Animate/ComputerAnimate.gltf')
